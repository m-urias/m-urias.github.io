Traceback (most recent call last):
  File "C:\Users\XPS\AppData\Roaming\Python\Python312\site-packages\jupyter_core\utils\__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\XPS\AppData\Local\Programs\Python\Python312\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\XPS\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\XPS\AppData\Roaming\Python\Python312\site-packages\jupyter_core\utils\__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\XPS\AppData\Local\Programs\Python\Python312\Lib\asyncio\base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\XPS\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\XPS\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\XPS\AppData\Local\Programs\Python\Python312\Lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
results = fred.search('GDP')
results
------------------


[31m---------------------------------------------------------------------------[39m
[31mInvalidURL[39m                                Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[2][39m[32m, line 1[39m
[32m----> [39m[32m1[39m results = [43mfred[49m[43m.[49m[43msearch[49m[43m([49m[33;43m'[39;49m[33;43mGDP[39;49m[33;43m'[39;49m[43m)[49m
[32m      2[39m results

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\site-packages\fredapi\fred.py:406[39m, in [36mFred.search[39m[34m(self, text, limit, order_by, sort_order, filter)[39m
[32m    380[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    381[39m [33;03mDo a fulltext search for series in the Fred dataset. Returns information about matching series in a DataFrame.[39;00m
[32m    382[39m 
[32m   (...)[39m[32m    402[39m [33;03m    a DataFrame containing information about the matching Fred series[39;00m
[32m    403[39m [33;03m"""[39;00m
[32m    404[39m url = [33m"[39m[38;5;132;01m%s[39;00m[33m/series/search?search_text=[39m[38;5;132;01m%s[39;00m[33m&[39m[33m"[39m % ([38;5;28mself[39m.root_url,
[32m    405[39m                                             quote_plus(text))
[32m--> [39m[32m406[39m info = [38;5;28;43mself[39;49m[43m.[49m[43m__get_search_results[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mlimit[49m[43m,[49m[43m [49m[43morder_by[49m[43m,[49m[43m [49m[43msort_order[49m[43m,[49m[43m [49m[38;5;28;43mfilter[39;49m[43m)[49m
[32m    407[39m [38;5;28;01mreturn[39;00m info

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\site-packages\fredapi\fred.py:363[39m, in [36mFred.__get_search_results[39m[34m(self, url, limit, order_by, sort_order, filter)[39m
[32m    360[39m     [38;5;28;01melse[39;00m:
[32m    361[39m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m([33m'[39m[38;5;132;01m%s[39;00m[33m is not in the valid list of sort_order options: [39m[38;5;132;01m%s[39;00m[33m'[39m % (sort_order, [38;5;28mstr[39m(sort_order_options)))
[32m--> [39m[32m363[39m data, num_results_total = [38;5;28;43mself[39;49m[43m.[49m[43m__do_series_search[49m[43m([49m[43murl[49m[43m)[49m
[32m    364[39m [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m    365[39m     [38;5;28;01mreturn[39;00m data

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\site-packages\fredapi\fred.py:306[39m, in [36mFred.__do_series_search[39m[34m(self, url)[39m
[32m    302[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m__do_series_search[39m([38;5;28mself[39m, url):
[32m    303[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m    304[39m [33;03m    helper function for making one HTTP request for data, and parsing the returned results into a DataFrame[39;00m
[32m    305[39m [33;03m    """[39;00m
[32m--> [39m[32m306[39m     root = [38;5;28;43mself[39;49m[43m.[49m[43m__fetch_data[49m[43m([49m[43murl[49m[43m)[49m
[32m    308[39m     series_ids = []
[32m    309[39m     data = {}

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\site-packages\fredapi\fred.py:84[39m, in [36mFred.__fetch_data[39m[34m(self, url)[39m
[32m     82[39m url += [33m'[39m[33m&api_key=[39m[33m'[39m + [38;5;28mself[39m.api_key
[32m     83[39m [38;5;28;01mtry[39;00m:
[32m---> [39m[32m84[39m     response = [43murlopen[49m[43m([49m[43murl[49m[43m)[49m
[32m     85[39m     root = ET.fromstring(response.read())
[32m     86[39m [38;5;28;01mexcept[39;00m HTTPError [38;5;28;01mas[39;00m exc:

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\urllib\request.py:215[39m, in [36murlopen[39m[34m(url, data, timeout, cafile, capath, cadefault, context)[39m
[32m    213[39m [38;5;28;01melse[39;00m:
[32m    214[39m     opener = _opener
[32m--> [39m[32m215[39m [38;5;28;01mreturn[39;00m [43mopener[49m[43m.[49m[43mopen[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mdata[49m[43m,[49m[43m [49m[43mtimeout[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\urllib\request.py:515[39m, in [36mOpenerDirector.open[39m[34m(self, fullurl, data, timeout)[39m
[32m    512[39m     req = meth(req)
[32m    514[39m sys.audit([33m'[39m[33murllib.Request[39m[33m'[39m, req.full_url, req.data, req.headers, req.get_method())
[32m--> [39m[32m515[39m response = [38;5;28;43mself[39;49m[43m.[49m[43m_open[49m[43m([49m[43mreq[49m[43m,[49m[43m [49m[43mdata[49m[43m)[49m
[32m    517[39m [38;5;66;03m# post-process response[39;00m
[32m    518[39m meth_name = protocol+[33m"[39m[33m_response[39m[33m"[39m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\urllib\request.py:532[39m, in [36mOpenerDirector._open[39m[34m(self, req, data)[39m
[32m    529[39m     [38;5;28;01mreturn[39;00m result
[32m    531[39m protocol = req.type
[32m--> [39m[32m532[39m result = [38;5;28;43mself[39;49m[43m.[49m[43m_call_chain[49m[43m([49m[38;5;28;43mself[39;49m[43m.[49m[43mhandle_open[49m[43m,[49m[43m [49m[43mprotocol[49m[43m,[49m[43m [49m[43mprotocol[49m[43m [49m[43m+[49m
[32m    533[39m [43m                          [49m[33;43m'[39;49m[33;43m_open[39;49m[33;43m'[39;49m[43m,[49m[43m [49m[43mreq[49m[43m)[49m
[32m    534[39m [38;5;28;01mif[39;00m result:
[32m    535[39m     [38;5;28;01mreturn[39;00m result

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\urllib\request.py:492[39m, in [36mOpenerDirector._call_chain[39m[34m(self, chain, kind, meth_name, *args)[39m
[32m    490[39m [38;5;28;01mfor[39;00m handler [38;5;129;01min[39;00m handlers:
[32m    491[39m     func = [38;5;28mgetattr[39m(handler, meth_name)
[32m--> [39m[32m492[39m     result = [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m)[49m
[32m    493[39m     [38;5;28;01mif[39;00m result [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    494[39m         [38;5;28;01mreturn[39;00m result

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\urllib\request.py:1392[39m, in [36mHTTPSHandler.https_open[39m[34m(self, req)[39m
[32m   1391[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mhttps_open[39m([38;5;28mself[39m, req):
[32m-> [39m[32m1392[39m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mdo_open[49m[43m([49m[43mhttp[49m[43m.[49m[43mclient[49m[43m.[49m[43mHTTPSConnection[49m[43m,[49m[43m [49m[43mreq[49m[43m,[49m
[32m   1393[39m [43m                        [49m[43mcontext[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43m_context[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\urllib\request.py:1344[39m, in [36mAbstractHTTPHandler.do_open[39m[34m(self, http_class, req, **http_conn_args)[39m
[32m   1342[39m [38;5;28;01mtry[39;00m:
[32m   1343[39m     [38;5;28;01mtry[39;00m:
[32m-> [39m[32m1344[39m         [43mh[49m[43m.[49m[43mrequest[49m[43m([49m[43mreq[49m[43m.[49m[43mget_method[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mreq[49m[43m.[49m[43mselector[49m[43m,[49m[43m [49m[43mreq[49m[43m.[49m[43mdata[49m[43m,[49m[43m [49m[43mheaders[49m[43m,[49m
[32m   1345[39m [43m                  [49m[43mencode_chunked[49m[43m=[49m[43mreq[49m[43m.[49m[43mhas_header[49m[43m([49m[33;43m'[39;49m[33;43mTransfer-encoding[39;49m[33;43m'[39;49m[43m)[49m[43m)[49m
[32m   1346[39m     [38;5;28;01mexcept[39;00m [38;5;167;01mOSError[39;00m [38;5;28;01mas[39;00m err: [38;5;66;03m# timeout error[39;00m
[32m   1347[39m         [38;5;28;01mraise[39;00m URLError(err)

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\http\client.py:1336[39m, in [36mHTTPConnection.request[39m[34m(self, method, url, body, headers, encode_chunked)[39m
[32m   1333[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mrequest[39m([38;5;28mself[39m, method, url, body=[38;5;28;01mNone[39;00m, headers={}, *,
[32m   1334[39m             encode_chunked=[38;5;28;01mFalse[39;00m):
[32m   1335[39m [38;5;250m    [39m[33;03m"""Send a complete request to the server."""[39;00m
[32m-> [39m[32m1336[39m     [38;5;28;43mself[39;49m[43m.[49m[43m_send_request[49m[43m([49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43mbody[49m[43m,[49m[43m [49m[43mheaders[49m[43m,[49m[43m [49m[43mencode_chunked[49m[43m)[49m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\http\client.py:1347[39m, in [36mHTTPConnection._send_request[39m[34m(self, method, url, body, headers, encode_chunked)[39m
[32m   1344[39m [38;5;28;01mif[39;00m [33m'[39m[33maccept-encoding[39m[33m'[39m [38;5;129;01min[39;00m header_names:
[32m   1345[39m     skips[[33m'[39m[33mskip_accept_encoding[39m[33m'[39m] = [32m1[39m
[32m-> [39m[32m1347[39m [38;5;28;43mself[39;49m[43m.[49m[43mputrequest[49m[43m([49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mskips[49m[43m)[49m
[32m   1349[39m [38;5;66;03m# chunked encoding will happen if HTTP/1.1 is used and either[39;00m
[32m   1350[39m [38;5;66;03m# the caller passes encode_chunked=True or the following[39;00m
[32m   1351[39m [38;5;66;03m# conditions hold:[39;00m
[32m   1352[39m [38;5;66;03m# 1. content-length has not been explicitly set[39;00m
[32m   1353[39m [38;5;66;03m# 2. the body is a file or iterable, but not a str or bytes-like[39;00m
[32m   1354[39m [38;5;66;03m# 3. Transfer-Encoding has NOT been explicitly set by the caller[39;00m
[32m   1356[39m [38;5;28;01mif[39;00m [33m'[39m[33mcontent-length[39m[33m'[39m [38;5;129;01mnot[39;00m [38;5;129;01min[39;00m header_names:
[32m   1357[39m     [38;5;66;03m# only chunk body if not explicitly set for backwards[39;00m
[32m   1358[39m     [38;5;66;03m# compatibility, assuming the client code is already handling the[39;00m
[32m   1359[39m     [38;5;66;03m# chunking[39;00m

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\http\client.py:1181[39m, in [36mHTTPConnection.putrequest[39m[34m(self, method, url, skip_host, skip_accept_encoding)[39m
[32m   1178[39m [38;5;28mself[39m._method = method
[32m   1180[39m url = url [38;5;129;01mor[39;00m [33m'[39m[33m/[39m[33m'[39m
[32m-> [39m[32m1181[39m [38;5;28;43mself[39;49m[43m.[49m[43m_validate_path[49m[43m([49m[43murl[49m[43m)[49m
[32m   1183[39m request = [33m'[39m[38;5;132;01m%s[39;00m[33m [39m[38;5;132;01m%s[39;00m[33m [39m[38;5;132;01m%s[39;00m[33m'[39m % (method, url, [38;5;28mself[39m._http_vsn_str)
[32m   1185[39m [38;5;28mself[39m._output([38;5;28mself[39m._encode_request(request))

[36mFile [39m[32m~\AppData\Local\Programs\Python\Python312\Lib\http\client.py:1281[39m, in [36mHTTPConnection._validate_path[39m[34m(self, url)[39m
[32m   1279[39m match = _contains_disallowed_url_pchar_re.search(url)
[32m   1280[39m [38;5;28;01mif[39;00m match:
[32m-> [39m[32m1281[39m     [38;5;28;01mraise[39;00m InvalidURL([33mf[39m[33m"[39m[33mURL can[39m[33m'[39m[33mt contain control characters. [39m[38;5;132;01m{[39;00murl[38;5;132;01m!r}[39;00m[33m [39m[33m"[39m
[32m   1282[39m                      [33mf[39m[33m"[39m[33m(found at least [39m[38;5;132;01m{[39;00mmatch.group()[38;5;132;01m!r}[39;00m[33m)[39m[33m"[39m)

[31mInvalidURL[39m: URL can't contain control characters. '/fred/series/search?search_text=GDP&&api_key=insert api key here' (found at least ' ')

